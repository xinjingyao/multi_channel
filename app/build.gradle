apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId APPLICATION_ID
        minSdkVersion 17
        targetSdkVersion 28
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        // 通过buildConfigField自定义配置信息
        buildConfigField("String", "BASE_API", "${BASE_API}")
//        buildConfigField("String", "CHANNEL", "${CHANNEL}")
        buildConfigField("boolean", "LOG_SWITCH", "${LOG_SWITCH}")

//        // 在清单文件中需要引用的参数
//        manifestPlaceholders = [
//                APP_NAME: APP_NAME,
//                CHANNEL : CHANNEL]

        flavorDimensions "versionName" // 为了让多渠道包间的纬度统一
    }

    //签名配置
    signingConfigs {
        debug { // debug签名配置
            storeFile file(STORE_FILE)//密钥文件路径
            storePassword STORE_PASSWORD//密钥文件密码
            keyAlias KEY_ALIAS//key别名
            keyPassword KEY_PASSWORD//key密码
        }
        release {//发布版签名配置
            storeFile file(STORE_FILE)//密钥文件路径
            storePassword STORE_PASSWORD//密钥文件密码
            keyAlias KEY_ALIAS//key别名
            keyPassword KEY_PASSWORD//key密码
        }
    }

    // 构建配置
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true  // 混淆开启
            zipAlignEnabled true // 压缩开启
            shrinkResources true // 移除无用资源
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
        }
    }

    // 多渠道打包配置名称
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildName = "multi-channel"
            def type = variant.buildType.name
            def releaseApkName
            releaseApkName = buildName + '_' + productFlavors.name + '_' + type + "_" + "${defaultConfig.versionName}" + '.apk'
            outputFileName = releaseApkName
        }
    }

    // 渠道配置
    productFlavors {
        xiaomi {}
        huawei {}
        _360 {}
        wandoujia {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [
                APP_NAME: APP_NAME,
                CHANNEL : name]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
